{"version":3,"file":"static/js/120.a3fdaff6.chunk.js","mappings":"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","sources":["screens/Console/Common/Hooks/useApi.tsx","screens/Console/Common/SearchBox.tsx","screens/Console/Storage/StoragePVCs.tsx","screens/Console/Tenants/TenantDetails/DeletePVC.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\ntype NoReturnFunction = (param?: any) => void;\ntype ApiMethodToInvoke = (method: string, url: string, data?: any) => void;\ntype IsApiInProgress = boolean;\n\nconst useApi = (\n  onSuccess: NoReturnFunction,\n  onError: NoReturnFunction\n): [IsApiInProgress, ApiMethodToInvoke] => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const callApi = (method: string, url: string, data?: any, headers?: any) => {\n    setIsLoading(true);\n    api\n      .invoke(method, url, data, headers)\n      .then((res: any) => {\n        setIsLoading(false);\n        onSuccess(res);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setIsLoading(false);\n        onError(err);\n      });\n  };\n\n  return [isLoading, callApi];\n};\n\nexport default useApi;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { SearchIcon } from \"mds\";\nimport TextField from \"@mui/material/TextField\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { searchField } from \"./FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    searchField: {\n      ...searchField.searchField,\n    },\n    adornment: {},\n  });\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  value: string;\n  classes: any;\n  onChange: (value: string) => void;\n  adornmentPosition?: \"start\" | \"end\";\n  overrideClass?: any;\n};\n\nconst SearchBox = ({\n  placeholder = \"\",\n  classes,\n  onChange,\n  adornmentPosition = \"end\",\n  overrideClass,\n  value,\n}: SearchBoxProps) => {\n  const inputProps = {\n    disableUnderline: true,\n    [`${adornmentPosition}Adornment`]: (\n      <InputAdornment\n        position={adornmentPosition}\n        className={classes.adornment}\n      >\n        <SearchIcon />\n      </InputAdornment>\n    ),\n  };\n  return (\n    <TextField\n      placeholder={placeholder}\n      className={overrideClass ? overrideClass : classes.searchField}\n      id=\"search-resource\"\n      label=\"\"\n      InputProps={inputProps}\n      onChange={(e) => {\n        onChange(e.target.value);\n      }}\n      variant=\"standard\"\n      value={value}\n    />\n  );\n};\n\nexport default withStyles(styles)(SearchBox);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Grid } from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { useAppDispatch } from \"../../../store\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { IPVCsResponse, IStoragePVCs } from \"./types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport DeletePVC from \"../Tenants/TenantDetails/DeletePVC\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport SearchBox from \"../Common/SearchBox\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\ninterface IStorageVolumesProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tableWrapper: {\n      height: \"calc(100vh - 150px)\",\n    },\n    ...actionsTray,\n    ...searchField,\n    ...containerForHeader,\n  });\n\nconst StorageVolumes = ({ classes }: IStorageVolumesProps) => {\n  const dispatch = useAppDispatch();\n\n  const [records, setRecords] = useState<IStoragePVCs[]>([]);\n  const [filter, setFilter] = useState(\"\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [selectedPVC, setSelectedPVC] = useState<any>(null);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/list-pvcs`)\n        .then((res: IPVCsResponse) => {\n          let volumes = get(res, \"pvcs\", []);\n          setRecords(volumes ? volumes : []);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [loading, dispatch]);\n\n  const filteredRecords: IStoragePVCs[] = records.filter((elementItem) =>\n    elementItem.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const confirmDeletePVC = (pvcItem: IStoragePVCs) => {\n    const delPvc = {\n      ...pvcItem,\n      tenant: pvcItem.tenant,\n      namespace: pvcItem.namespace,\n    };\n    setSelectedPVC(delPvc);\n    setDeleteOpen(true);\n  };\n\n  const tableActions = [{ type: \"delete\", onClick: confirmDeletePVC }];\n\n  const closeDeleteModalAndRefresh = (reloadData: boolean) => {\n    setDeleteOpen(false);\n    setLoading(true);\n  };\n\n  return (\n    <Fragment>\n      {deleteOpen && (\n        <DeletePVC\n          deleteOpen={deleteOpen}\n          selectedPVC={selectedPVC}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      <PageHeaderWrapper\n        label=\"Persistent Volumes Claims\"\n        middleComponent={\n          <SearchBox\n            placeholder={\"Search Volumes (PVCs)\"}\n            onChange={(val) => {\n              setFilter(val);\n            }}\n            value={filter}\n          />\n        }\n      />\n      <PageLayout>\n        <Grid item xs={12}>\n          <TableWrapper\n            itemActions={tableActions}\n            columns={[\n              {\n                label: \"Name\",\n                elementKey: \"name\",\n              },\n              {\n                label: \"Namespace\",\n                elementKey: \"namespace\",\n                width: 90,\n              },\n              {\n                label: \"Status\",\n                elementKey: \"status\",\n                width: 120,\n              },\n              {\n                label: \"Tenant\",\n                renderFullObject: true,\n                renderFunction: (record: any) =>\n                  `${record.namespace}/${record.tenant}`,\n              },\n              {\n                label: \"Capacity\",\n                elementKey: \"capacity\",\n                width: 90,\n              },\n              {\n                label: \"Storage Class\",\n                elementKey: \"storageClass\",\n              },\n            ]}\n            isLoading={loading}\n            records={filteredRecords}\n            entityName=\"PVCs\"\n            idField=\"name\"\n            customPaperHeight={classes.tableWrapper}\n          />\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(StorageVolumes);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { DialogContentText } from \"@mui/material\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { IStoragePVCs } from \"../../Storage/types\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IDeletePVC {\n  deleteOpen: boolean;\n  selectedPVC: IStoragePVCs;\n  closeDeleteModalAndRefresh: (refreshList: boolean) => any;\n}\n\nconst DeletePVC = ({\n  deleteOpen,\n  selectedPVC,\n  closeDeleteModalAndRefresh,\n}: IDeletePVC) => {\n  const dispatch = useAppDispatch();\n  const [retypePVC, setRetypePVC] = useState(\"\");\n\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  const onConfirmDelete = () => {\n    if (retypePVC !== selectedPVC.name) {\n      dispatch(\n        setErrorSnackMessage({\n          errorMessage: \"PVC name is incorrect\",\n          detailedError: \"\",\n        })\n      );\n      return;\n    }\n    invokeDeleteApi(\n      \"DELETE\",\n      `/api/v1/namespaces/${selectedPVC.namespace}/tenants/${selectedPVC.tenant}/pvc/${selectedPVC.name}`\n    );\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete PVC`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: retypePVC !== selectedPVC.name || deleteLoading,\n      }}\n      confirmationContent={\n        <DialogContentText>\n          To continue please type <b>{selectedPVC.name}</b> in the box.\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"retype-PVC\"\n              name=\"retype-PVC\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setRetypePVC(event.target.value);\n              }}\n              label=\"\"\n              value={retypePVC}\n            />\n          </Grid>\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeletePVC;\n"],"names":["onSuccess","onError","useState","isLoading","setIsLoading","method","url","data","headers","api","then","res","catch","err","withStyles","theme","createStyles","searchField","adornment","placeholder","classes","onChange","adornmentPosition","overrideClass","value","inputProps","disableUnderline","position","className","id","label","InputProps","e","target","variant","tableWrapper","height","actionsTray","containerForHeader","dispatch","useAppDispatch","records","setRecords","filter","setFilter","loading","setLoading","selectedPVC","setSelectedPVC","deleteOpen","setDeleteOpen","useEffect","volumes","get","setErrorSnackMessage","filteredRecords","elementItem","name","toLowerCase","includes","tableActions","type","onClick","pvcItem","delPvc","tenant","namespace","Fragment","closeDeleteModalAndRefresh","reloadData","middleComponent","val","item","xs","itemActions","columns","elementKey","width","renderFullObject","renderFunction","record","entityName","idField","customPaperHeight","retypePVC","setRetypePVC","useApi","deleteLoading","invokeDeleteApi","title","confirmText","isOpen","titleIcon","onConfirm","errorMessage","detailedError","onClose","confirmButtonProps","disabled","confirmationContent","event"],"sourceRoot":""}