{"version":3,"file":"static/js/483.7b726af6.chunk.js","mappings":"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","sources":["screens/Console/Common/AButton/AButton.tsx","screens/Console/Common/Components/withSuspense.tsx","screens/Console/Common/SearchBox.tsx","screens/Console/Tenants/ListTenants/InformationItem.tsx","screens/Console/Tenants/ListTenants/TenantListItem.tsx","screens/Console/Common/VirtualizedList/VirtualizedList.tsx","screens/Console/Tenants/ListTenants/ListTenants.tsx","screens/Console/Common/UsageBar/UsageBar.tsx","screens/Console/Tenants/ListTenants/TenantCapacity.tsx"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      border: 0,\n      backgroundColor: \"transparent\",\n      textDecoration: \"underline\",\n      cursor: \"pointer\",\n      fontSize: \"inherit\",\n      color: theme.palette.info.main,\n      fontFamily: \"Inter, sans-serif\",\n    },\n  });\n\ninterface IAButton extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst AButton = ({ classes, children, ...rest }: IAButton) => {\n  return (\n    <button {...rest} className={classes.root}>\n      {children}\n    </button>\n  );\n};\n\nexport default withStyles(styles)(AButton);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...(props as any)} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { SearchIcon } from \"mds\";\nimport TextField from \"@mui/material/TextField\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { searchField } from \"./FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    searchField: {\n      ...searchField.searchField,\n    },\n    adornment: {},\n  });\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  value: string;\n  classes: any;\n  onChange: (value: string) => void;\n  adornmentPosition?: \"start\" | \"end\";\n  overrideClass?: any;\n};\n\nconst SearchBox = ({\n  placeholder = \"\",\n  classes,\n  onChange,\n  adornmentPosition = \"end\",\n  overrideClass,\n  value,\n}: SearchBoxProps) => {\n  const inputProps = {\n    disableUnderline: true,\n    [`${adornmentPosition}Adornment`]: (\n      <InputAdornment\n        position={adornmentPosition}\n        className={classes.adornment}\n      >\n        <SearchIcon />\n      </InputAdornment>\n    ),\n  };\n  return (\n    <TextField\n      placeholder={placeholder}\n      className={overrideClass ? overrideClass : classes.searchField}\n      id=\"search-resource\"\n      label=\"\"\n      InputProps={inputProps}\n      onChange={(e) => {\n        onChange(e.target.value);\n      }}\n      variant=\"standard\"\n      value={value}\n    />\n  );\n};\n\nexport default withStyles(styles)(SearchBox);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\n\ninterface IInformationItemProps {\n  label: string;\n  value: string;\n  unit?: string;\n  variant?: \"normal\" | \"faded\";\n}\n\nconst InformationItem = ({\n  label,\n  value,\n  unit,\n  variant = \"normal\",\n}: IInformationItemProps) => {\n  return (\n    <div style={{ margin: \"0px 20px\" }}>\n      <div style={{ textAlign: \"center\" }}>\n        <span\n          style={{\n            fontSize: 18,\n            color: variant === \"normal\" ? \"#000\" : \"#999\",\n            fontWeight: 400,\n          }}\n        >\n          {value}\n        </span>\n        {unit && (\n          <Fragment>\n            {\" \"}\n            <span\n              style={{ fontSize: 12, color: \"#8F9090\", fontWeight: \"bold\" }}\n            >\n              {unit}\n            </span>\n          </Fragment>\n        )}\n      </div>\n      <div\n        style={{\n          textAlign: \"center\",\n          color: variant === \"normal\" ? \"#767676\" : \"#bababa\",\n          fontSize: 12,\n          whiteSpace: \"nowrap\",\n        }}\n      >\n        {label}\n      </div>\n    </div>\n  );\n};\n\nexport default InformationItem;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport { CapacityValues, ITenant, ValueUnit } from \"./types\";\nimport { setTenantName } from \"../tenantsSlice\";\nimport { getTenantAsync } from \"../thunks/tenantDetailsAsync\";\nimport { DrivesIcon } from \"mds\";\nimport { niceBytes, niceBytesInt } from \"../../../../common/utils\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport InformationItem from \"./InformationItem\";\nimport TenantCapacity from \"./TenantCapacity\";\nimport { useAppDispatch } from \"../../../../store\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    redState: {\n      color: theme.palette.error.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        float: \"left\",\n        marginRight: 4,\n      },\n    },\n    yellowState: {\n      color: theme.palette.warning.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        float: \"left\",\n        marginRight: 4,\n      },\n    },\n    greenState: {\n      color: theme.palette.success.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        float: \"left\",\n        marginRight: 4,\n      },\n    },\n    greyState: {\n      color: \"grey\",\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        float: \"left\",\n        marginRight: 4,\n      },\n    },\n    tenantItem: {\n      border: \"1px solid #EAEAEA\",\n      marginBottom: 16,\n      padding: \"15px 30px\",\n      \"&:hover\": {\n        backgroundColor: \"#FAFAFA\",\n        cursor: \"pointer\",\n      },\n    },\n    titleContainer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: \"100%\",\n    },\n    title: {\n      fontSize: 18,\n      fontWeight: \"bold\",\n    },\n    namespaceLabel: {\n      display: \"inline-flex\",\n      backgroundColor: \"#EAEDEF\",\n      borderRadius: 2,\n      padding: \"4px 8px\",\n      fontSize: 10,\n      marginRight: 20,\n    },\n    status: {\n      fontSize: 12,\n      color: \"#8F9090\",\n    },\n  });\n\ninterface ITenantListItem {\n  tenant: ITenant;\n  classes: any;\n}\n\nconst TenantListItem = ({ tenant, classes }: ITenantListItem) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const healthStatusToClass = (health_status: string) => {\n    switch (health_status) {\n      case \"red\":\n        return classes.redState;\n      case \"yellow\":\n        return classes.yellowState;\n      case \"green\":\n        return classes.greenState;\n      default:\n        return classes.greyState;\n    }\n  };\n\n  let raw: ValueUnit = { value: \"n/a\", unit: \"\" };\n  let capacity: ValueUnit = { value: \"n/a\", unit: \"\" };\n  let used: ValueUnit = { value: \"n/a\", unit: \"\" };\n  let localUse: ValueUnit = { value: \"n/a\", unit: \"\" };\n  let tieredUse: ValueUnit = { value: \"n/a\", unit: \"\" };\n\n  if (tenant.capacity_raw) {\n    const b = niceBytes(`${tenant.capacity_raw}`, true);\n    const parts = b.split(\" \");\n    raw.value = parts[0];\n    raw.unit = parts[1];\n  }\n  if (tenant.capacity) {\n    const b = niceBytes(`${tenant.capacity}`, true);\n    const parts = b.split(\" \");\n    capacity.value = parts[0];\n    capacity.unit = parts[1];\n  }\n  if (tenant.capacity_usage) {\n    const b = niceBytesInt(tenant.capacity_usage, true);\n    const parts = b.split(\" \");\n    used.value = parts[0];\n    used.unit = parts[1];\n  }\n\n  let spaceVariants: CapacityValues[] = [];\n  if (!tenant.tiers || tenant.tiers.length === 0) {\n    spaceVariants = [\n      { value: tenant.capacity_usage || 0, variant: \"STANDARD\" },\n    ];\n  } else {\n    spaceVariants = tenant.tiers.map((itemTenant) => {\n      return { value: itemTenant.size, variant: itemTenant.name };\n    });\n    let internalUsage = tenant.tiers\n      .filter((itemTenant) => {\n        return itemTenant.type === \"internal\";\n      })\n      .reduce((sum, itemTenant) => sum + itemTenant.size, 0);\n    let tieredUsage = tenant.tiers\n      .filter((itemTenant) => {\n        return itemTenant.type !== \"internal\";\n      })\n      .reduce((sum, itemTenant) => sum + itemTenant.size, 0);\n\n    const t = niceBytesInt(tieredUsage, true);\n    const parts = t.split(\" \");\n    tieredUse.value = parts[0];\n    tieredUse.unit = parts[1];\n\n    const is = niceBytesInt(internalUsage, true);\n    const partsInternal = is.split(\" \");\n    localUse.value = partsInternal[0];\n    localUse.unit = partsInternal[1];\n  }\n\n  const openTenantDetails = () => {\n    dispatch(\n      setTenantName({\n        name: tenant.name,\n        namespace: tenant.namespace,\n      })\n    );\n    dispatch(getTenantAsync());\n    navigate(`/namespaces/${tenant.namespace}/tenants/${tenant.name}/summary`);\n  };\n\n  return (\n    <Fragment>\n      <div\n        className={classes.tenantItem}\n        id={`list-tenant-${tenant.name}`}\n        onClick={openTenantDetails}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.titleContainer}>\n            <div className={classes.title}>\n              <span>{tenant.name}</span>\n            </div>\n            <div>\n              <span className={classes.namespaceLabel}>\n                Namespace:&nbsp;{tenant.namespace}\n              </span>\n            </div>\n          </Grid>\n          <Grid item xs={12} sx={{ marginTop: 2 }}>\n            <Grid container>\n              <Grid item xs={2}>\n                <TenantCapacity\n                  totalCapacity={tenant.capacity || 0}\n                  usedSpaceVariants={spaceVariants}\n                  statusClass={healthStatusToClass(tenant.health_status)}\n                />\n              </Grid>\n              <Grid item xs>\n                <Grid\n                  item\n                  xs\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\",\n                    marginTop: \"10px\",\n                  }}\n                >\n                  <InformationItem\n                    label={\"Raw Capacity\"}\n                    value={raw.value}\n                    unit={raw.unit}\n                  />\n                  <InformationItem\n                    label={\"Usable Capacity\"}\n                    value={capacity.value}\n                    unit={capacity.unit}\n                  />\n                  <InformationItem\n                    label={\"Pools\"}\n                    value={tenant.pool_count.toString()}\n                    variant={\"faded\"}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  sx={{ paddingLeft: \"20px\", marginTop: \"15px\" }}\n                >\n                  <span className={classes.status}>\n                    <strong>State:</strong> {tenant.currentState}\n                  </span>\n                </Grid>\n              </Grid>\n              <Grid item xs={3}>\n                <Fragment>\n                  <Grid container>\n                    <Grid\n                      item\n                      xs={2}\n                      textAlign={\"center\"}\n                      justifyContent={\"center\"}\n                      justifyItems={\"center\"}\n                    >\n                      <DrivesIcon\n                        style={{ width: 25, color: \"rgb(91,91,91)\" }}\n                      />\n                      <div\n                        style={{\n                          color: \"rgb(118, 118, 118)\",\n                          fontSize: 12,\n                          fontWeight: \"400\",\n                        }}\n                      >\n                        Usage\n                      </div>\n                    </Grid>\n                    <Grid item xs={1} />\n                    <Grid item style={{ paddingTop: 8 }}>\n                      {(!tenant.tiers || tenant.tiers.length === 0) && (\n                        <div\n                          style={{\n                            fontSize: 14,\n                            fontWeight: 400,\n                          }}\n                        >\n                          <span\n                            style={{\n                              color: \"rgb(62,62,62)\",\n                            }}\n                          >\n                            Internal:{\" \"}\n                          </span>{\" \"}\n                          {`${used.value} ${used.unit}`}\n                        </div>\n                      )}\n\n                      {tenant.tiers && tenant.tiers.length > 0 && (\n                        <Fragment>\n                          <div\n                            style={{\n                              fontSize: 14,\n                              fontWeight: 400,\n                            }}\n                          >\n                            <span\n                              style={{\n                                color: \"rgb(62,62,62)\",\n                              }}\n                            >\n                              Internal:{\" \"}\n                            </span>{\" \"}\n                            {`${localUse.value} ${localUse.unit}`}\n                          </div>\n                          <div\n                            style={{\n                              fontSize: 14,\n                              fontWeight: 400,\n                            }}\n                          >\n                            <span\n                              style={{\n                                color: \"rgb(62,62,62)\",\n                              }}\n                            >\n                              Tiered:{\" \"}\n                            </span>{\" \"}\n                            {`${tieredUse.value} ${tieredUse.unit}`}\n                          </div>\n                        </Fragment>\n                      )}\n                    </Grid>\n                  </Grid>\n                </Fragment>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(TenantListItem);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, ReactElement } from \"react\";\nimport { FixedSizeList as List } from \"react-window\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport { AutoSizer } from \"react-virtualized\";\n\ninterface IVirtualizedList {\n  rowRenderFunction: (index: number) => ReactElement | null;\n  totalItems: number;\n  defaultHeight?: number;\n}\n\nlet itemStatusMap: any = {};\nconst LOADING = 1;\nconst LOADED = 2;\n\nconst VirtualizedList = ({\n  rowRenderFunction,\n  totalItems,\n  defaultHeight,\n}: IVirtualizedList) => {\n  const isItemLoaded = (index: any) => !!itemStatusMap[index];\n\n  const loadMoreItems = (startIndex: number, stopIndex: number) => {\n    for (let index = startIndex; index <= stopIndex; index++) {\n      itemStatusMap[index] = LOADING;\n    }\n\n    for (let index = startIndex; index <= stopIndex; index++) {\n      itemStatusMap[index] = LOADED;\n    }\n  };\n\n  const RenderItemLine = ({ index, style }: any) => {\n    return <div style={style}>{rowRenderFunction(index)}</div>;\n  };\n\n  return (\n    <Fragment>\n      <InfiniteLoader\n        isItemLoaded={isItemLoaded}\n        loadMoreItems={loadMoreItems}\n        itemCount={totalItems}\n      >\n        {({ onItemsRendered, ref }) => (\n          // @ts-ignore\n          <AutoSizer>\n            {({ width, height }) => {\n              return (\n                <List\n                  itemSize={defaultHeight || 220}\n                  height={height}\n                  itemCount={totalItems}\n                  width={width}\n                  ref={ref}\n                  onItemsRendered={onItemsRendered}\n                >\n                  {RenderItemLine}\n                </List>\n              );\n            }}\n          </AutoSizer>\n        )}\n      </InfiniteLoader>\n    </Fragment>\n  );\n};\n\nexport default VirtualizedList;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { AddIcon, Button, HelpBox, RefreshIcon, TenantsIcon } from \"mds\";\nimport Grid from \"@mui/material/Grid\";\nimport { LinearProgress, SelectChangeEvent } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { ITenant, ITenantsResponse } from \"./types\";\nimport { niceBytes } from \"../../../../common/utils\";\nimport { NewServiceAccount } from \"../../Common/CredentialsPrompt/types\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport TenantListItem from \"./TenantListItem\";\nimport AButton from \"../../Common/AButton/AButton\";\n\nimport withSuspense from \"../../Common/Components/withSuspense\";\nimport VirtualizedList from \"../../Common/VirtualizedList/VirtualizedList\";\nimport SearchBox from \"../../Common/SearchBox\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../../store\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst CredentialsPrompt = withSuspense(\n  React.lazy(() => import(\"../../Common/CredentialsPrompt/CredentialsPrompt\"))\n);\n\ninterface ITenantsList {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...searchField,\n    ...containerForHeader,\n    tenantsList: {\n      height: \"calc(100vh - 195px)\",\n    },\n    sortByContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      marginBottom: 10,\n    },\n    innerSort: {\n      maxWidth: 200,\n      width: \"95%\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n    },\n    sortByLabel: {\n      whiteSpace: \"nowrap\",\n      fontSize: 14,\n      color: \"#838383\",\n      fontWeight: \"bold\",\n      marginRight: 10,\n    },\n  });\n\nconst ListTenants = ({ classes }: ITenantsList) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [filterTenants, setFilterTenants] = useState<string>(\"\");\n  const [records, setRecords] = useState<ITenant[]>([]);\n  const [showNewCredentials, setShowNewCredentials] = useState<boolean>(false);\n  const [createdAccount, setCreatedAccount] =\n    useState<NewServiceAccount | null>(null);\n  const [sortValue, setSortValue] = useState<string>(\"name\");\n\n  const closeCredentialsModal = () => {\n    setShowNewCredentials(false);\n    setCreatedAccount(null);\n  };\n\n  const filteredRecords = records.filter((b: any) => {\n    if (filterTenants === \"\") {\n      return true;\n    } else {\n      if (b.name.indexOf(filterTenants) >= 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  });\n\n  filteredRecords.sort((a, b) => {\n    switch (sortValue) {\n      case \"capacity\":\n        if (!a.capacity || !b.capacity) {\n          return 0;\n        }\n\n        if (a.capacity > b.capacity) {\n          return 1;\n        }\n\n        if (a.capacity < b.capacity) {\n          return -1;\n        }\n\n        return 0;\n      case \"usage\":\n        if (!a.capacity_usage || !b.capacity_usage) {\n          return 0;\n        }\n\n        if (a.capacity_usage > b.capacity_usage) {\n          return 1;\n        }\n\n        if (a.capacity_usage < b.capacity_usage) {\n          return -1;\n        }\n\n        return 0;\n      case \"active_status\":\n        if (a.health_status === \"red\" && b.health_status !== \"red\") {\n          return 1;\n        }\n\n        if (a.health_status !== \"red\" && b.health_status === \"red\") {\n          return -1;\n        }\n\n        return 0;\n      case \"failing_status\":\n        if (a.health_status === \"green\" && b.health_status !== \"green\") {\n          return 1;\n        }\n\n        if (a.health_status !== \"green\" && b.health_status === \"green\") {\n          return -1;\n        }\n\n        return 0;\n      default:\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (a.name < b.name) {\n          return -1;\n        }\n        return 0;\n    }\n  });\n\n  useEffect(() => {\n    if (isLoading) {\n      const fetchRecords = () => {\n        api\n          .invoke(\"GET\", `/api/v1/tenants`)\n          .then((res: ITenantsResponse) => {\n            if (res === null) {\n              setIsLoading(false);\n              return;\n            }\n            let resTenants: ITenant[] = [];\n            if (res.tenants !== null) {\n              resTenants = res.tenants;\n            }\n\n            for (let i = 0; i < resTenants.length; i++) {\n              resTenants[i].total_capacity = niceBytes(\n                resTenants[i].total_size + \"\"\n              );\n            }\n\n            setRecords(resTenants);\n            setIsLoading(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            dispatch(setErrorSnackMessage(err));\n            setIsLoading(false);\n          });\n      };\n      fetchRecords();\n    }\n  }, [isLoading, dispatch]);\n\n  useEffect(() => {\n    setIsLoading(true);\n  }, []);\n\n  const renderItemLine = (index: number) => {\n    const tenant = filteredRecords[index] || null;\n\n    if (tenant) {\n      return <TenantListItem tenant={tenant} />;\n    }\n\n    return null;\n  };\n\n  return (\n    <Fragment>\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={createdAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            closeCredentialsModal();\n          }}\n          entity=\"Tenant\"\n        />\n      )}\n      <PageHeaderWrapper\n        label=\"Tenants\"\n        middleComponent={\n          <SearchBox\n            placeholder={\"Filter Tenants\"}\n            onChange={(val) => {\n              setFilterTenants(val);\n            }}\n            value={filterTenants}\n          />\n        }\n        actions={\n          <Grid\n            item\n            xs={12}\n            sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n          >\n            <TooltipWrapper tooltip={\"Refresh Tenant List\"}>\n              <Button\n                id={\"refresh-tenant-list\"}\n                onClick={() => {\n                  setIsLoading(true);\n                }}\n                icon={<RefreshIcon />}\n                variant={\"regular\"}\n              />\n            </TooltipWrapper>\n            <TooltipWrapper tooltip={\"Create Tenant\"}>\n              <Button\n                id={\"create-tenant\"}\n                label={\"Create Tenant\"}\n                onClick={() => {\n                  navigate(\"/tenants/add\");\n                }}\n                icon={<AddIcon />}\n                variant={\"callAction\"}\n              />\n            </TooltipWrapper>\n          </Grid>\n        }\n      />\n      <PageLayout>\n        <Grid item xs={12} className={classes.tenantsList}>\n          {isLoading && <LinearProgress />}\n          {!isLoading && (\n            <Fragment>\n              {filteredRecords.length !== 0 && (\n                <Fragment>\n                  <Grid item xs={12} className={classes.sortByContainer}>\n                    <div className={classes.innerSort}>\n                      <span className={classes.sortByLabel}>Sort by</span>\n                      <SelectWrapper\n                        id={\"sort-by\"}\n                        label={\"\"}\n                        value={sortValue}\n                        onChange={(e: SelectChangeEvent<string>) => {\n                          setSortValue(e.target.value as string);\n                        }}\n                        name={\"sort-by\"}\n                        options={[\n                          { label: \"Name\", value: \"name\" },\n                          {\n                            label: \"Capacity\",\n                            value: \"capacity\",\n                          },\n                          {\n                            label: \"Usage\",\n                            value: \"usage\",\n                          },\n                          {\n                            label: \"Active Status\",\n                            value: \"active_status\",\n                          },\n                          {\n                            label: \"Failing Status\",\n                            value: \"failing_status\",\n                          },\n                        ]}\n                      />\n                    </div>\n                  </Grid>\n                  <VirtualizedList\n                    rowRenderFunction={renderItemLine}\n                    totalItems={filteredRecords.length}\n                  />\n                </Fragment>\n              )}\n              {filteredRecords.length === 0 && (\n                <Grid\n                  container\n                  justifyContent={\"center\"}\n                  alignContent={\"center\"}\n                  alignItems={\"center\"}\n                >\n                  <Grid item xs={8}>\n                    <HelpBox\n                      iconComponent={<TenantsIcon />}\n                      title={\"Tenants\"}\n                      help={\n                        <Fragment>\n                          Tenant is the logical structure to represent a MinIO\n                          deployment. A tenant can have different size and\n                          configurations from other tenants, even a different\n                          storage class.\n                          <br />\n                          <br />\n                          To get started,&nbsp;\n                          <AButton\n                            onClick={() => {\n                              navigate(\"/tenants/add\");\n                            }}\n                          >\n                            Create a Tenant.\n                          </AButton>\n                        </Fragment>\n                      }\n                    />\n                  </Grid>\n                </Grid>\n              )}\n            </Fragment>\n          )}\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(ListTenants);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nexport interface ISizeBarItem {\n  value: number;\n  itemName: string;\n  color: string;\n}\n\nexport interface IUsageBar {\n  totalValue: number;\n  sizeItems: ISizeBarItem[];\n  bgColor?: string;\n}\n\nconst UsageBar = ({\n  totalValue,\n  sizeItems,\n  bgColor = \"#ededed\",\n}: IUsageBar) => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: 12,\n        backgroundColor: bgColor,\n        borderRadius: 30,\n        display: \"flex\",\n        transitionDuration: \"0.3s\",\n        overflow: \"hidden\",\n      }}\n    >\n      {sizeItems.map((sizeElement, index) => {\n        const itemPercentage = (sizeElement.value * 100) / totalValue;\n        return (\n          <div\n            key={`itemSize-${index.toString()}`}\n            style={{\n              width: `${itemPercentage}%`,\n              height: \"100%\",\n              backgroundColor: sizeElement.color,\n              transitionDuration: \"0.3s\",\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default UsageBar;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Cell, Pie, PieChart } from \"recharts\";\nimport { CapacityValue, CapacityValues } from \"./types\";\nimport { niceBytesInt } from \"../../../../common/utils\";\nimport { CircleIcon } from \"mds\";\nimport UsageBar, { ISizeBarItem } from \"../../Common/UsageBar/UsageBar\";\n\ninterface ITenantCapacity {\n  totalCapacity: number;\n  usedSpaceVariants: CapacityValues[];\n  statusClass: string;\n  render?: \"pie\" | \"bar\";\n}\n\nconst TenantCapacity = ({\n  totalCapacity,\n  usedSpaceVariants,\n  statusClass,\n  render = \"pie\",\n}: ITenantCapacity) => {\n  const colors = [\n    \"#8dacd3\",\n    \"#bca1ea\",\n    \"#92e8d2\",\n    \"#efc9ac\",\n    \"#97f274\",\n    \"#f7d291\",\n    \"#71ACCB\",\n    \"#f28282\",\n    \"#e28cc1\",\n    \"#2781B0\",\n  ];\n\n  const BGColor = \"#ededed\";\n\n  const totalUsedSpace = usedSpaceVariants.reduce((acc, currValue) => {\n    return acc + currValue.value;\n  }, 0);\n\n  const emptySpace = totalCapacity - totalUsedSpace;\n\n  let tiersList: CapacityValue[] = [];\n\n  const standardTier = usedSpaceVariants.find(\n    (tier) => tier.variant === \"STANDARD\"\n  ) || {\n    value: 0,\n    variant: \"empty\",\n  };\n\n  if (usedSpaceVariants.length > 10) {\n    const totalUsedByTiers = totalUsedSpace - standardTier.value;\n\n    tiersList = [\n      { value: totalUsedByTiers, color: \"#2781B0\", label: \"Total Tiers Space\" },\n    ];\n  } else {\n    tiersList = usedSpaceVariants\n      .filter((variant) => variant.variant !== \"STANDARD\")\n      .map((variant, index) => {\n        return {\n          value: variant.value,\n          color: colors[index],\n          label: `Tier - ${variant.variant}`,\n        };\n      });\n  }\n\n  let standardTierColor = \"#07193E\";\n\n  const usedPercentage = (standardTier.value * 100) / totalCapacity;\n\n  if (usedPercentage >= 90) {\n    standardTierColor = \"#C83B51\";\n  } else if (usedPercentage >= 75) {\n    standardTierColor = \"#FFAB0F\";\n  }\n\n  const plotValues: CapacityValue[] = [\n    {\n      value: standardTier.value,\n      color: standardTierColor,\n      label: \"Used Space by Tenant\",\n    },\n    ...tiersList,\n    {\n      value: emptySpace,\n      color: render === \"bar\" ? BGColor : \"transparent\",\n      label: \"Empty Space\",\n    },\n  ];\n\n  if (render === \"bar\") {\n    const plotValuesForUsageBar: ISizeBarItem[] = plotValues.map((plotVal) => {\n      return {\n        value: plotVal.value,\n        color: plotVal.color,\n        itemName: plotVal.label,\n      };\n    });\n\n    return (\n      <div style={{ width: \"100%\", marginBottom: 15 }}>\n        <UsageBar\n          totalValue={totalCapacity}\n          sizeItems={plotValuesForUsageBar}\n          bgColor={BGColor}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ position: \"relative\", width: 110, height: 110 }}>\n      <div\n        style={{ position: \"absolute\", right: -5, top: 15, zIndex: 400 }}\n        className={statusClass}\n      >\n        <CircleIcon\n          style={{\n            border: \"#fff 2px solid\",\n            borderRadius: \"100%\",\n            width: 20,\n            height: 20,\n          }}\n        />\n      </div>\n      <span\n        style={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          fontWeight: \"bold\",\n          color: \"#000\",\n          fontSize: 12,\n        }}\n      >\n        {!isNaN(totalUsedSpace) ? niceBytesInt(totalUsedSpace) : \"N/A\"}\n      </span>\n      <div>\n        <PieChart width={110} height={110}>\n          <Pie\n            data={[{ value: 100 }]}\n            cx={\"50%\"}\n            cy={\"50%\"}\n            dataKey=\"value\"\n            outerRadius={50}\n            innerRadius={40}\n            fill={BGColor}\n            isAnimationActive={false}\n            stroke={\"none\"}\n          />\n          <Pie\n            data={plotValues}\n            cx={\"50%\"}\n            cy={\"50%\"}\n            dataKey=\"value\"\n            outerRadius={50}\n            innerRadius={40}\n          >\n            {plotValues.map((entry, index) => (\n              <Cell\n                key={`cellCapacity-${index}`}\n                fill={entry.color}\n                stroke={\"none\"}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n      </div>\n    </div>\n  );\n};\n\nexport default TenantCapacity;\n"],"names":["withStyles","theme","createStyles","root","padding","margin","border","backgroundColor","textDecoration","cursor","fontSize","color","palette","info","main","fontFamily","classes","children","rest","className","WrappedComponent","fallback","ComponentWithSuspense","props","Suspense","searchField","adornment","placeholder","onChange","adornmentPosition","overrideClass","value","inputProps","disableUnderline","position","id","label","InputProps","e","target","variant","unit","style","textAlign","fontWeight","Fragment","whiteSpace","redState","error","width","height","float","marginRight","yellowState","warning","greenState","success","greyState","tenantItem","marginBottom","titleContainer","display","justifyContent","title","namespaceLabel","borderRadius","status","tenant","dispatch","useAppDispatch","navigate","useNavigate","raw","capacity","used","localUse","tieredUse","capacity_raw","parts","niceBytes","split","capacity_usage","niceBytesInt","spaceVariants","tiers","length","map","itemTenant","size","name","internalUsage","filter","type","reduce","sum","tieredUsage","partsInternal","onClick","setTenantName","namespace","getTenantAsync","Grid","container","item","xs","sx","marginTop","TenantCapacity","totalCapacity","usedSpaceVariants","statusClass","health_status","healthStatusToClass","alignItems","pool_count","toString","paddingLeft","currentState","justifyItems","paddingTop","itemStatusMap","rowRenderFunction","totalItems","defaultHeight","RenderItemLine","index","isItemLoaded","loadMoreItems","startIndex","stopIndex","itemCount","onItemsRendered","ref","itemSize","CredentialsPrompt","withSuspense","React","actionsTray","containerForHeader","tenantsList","sortByContainer","innerSort","maxWidth","flexDirection","sortByLabel","useState","isLoading","setIsLoading","filterTenants","setFilterTenants","records","setRecords","showNewCredentials","setShowNewCredentials","createdAccount","setCreatedAccount","sortValue","setSortValue","filteredRecords","b","indexOf","sort","a","useEffect","api","then","res","resTenants","tenants","i","total_capacity","total_size","catch","err","setErrorSnackMessage","newServiceAccount","open","closeModal","entity","PageHeaderWrapper","middleComponent","SearchBox","val","actions","TooltipWrapper","tooltip","icon","PageLayout","LinearProgress","SelectWrapper","options","alignContent","iconComponent","help","AButton","totalValue","sizeItems","bgColor","transitionDuration","overflow","sizeElement","itemPercentage","render","colors","BGColor","totalUsedSpace","acc","currValue","emptySpace","tiersList","standardTier","find","tier","standardTierColor","usedPercentage","plotValues","plotValuesForUsageBar","plotVal","itemName","right","top","zIndex","left","transform","isNaN","PieChart","Pie","data","cx","cy","dataKey","outerRadius","innerRadius","fill","isAnimationActive","stroke","entry","Cell"],"sourceRoot":""}